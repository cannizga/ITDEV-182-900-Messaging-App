{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\joeac\\\\source\\\\repos\\\\messaging\\\\src\\\\components\\\\MessageList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { MessageShape } from \"../utils/MessageUtils\";\nimport MapView, { Marker } from 'react-native-maps';\n\nvar keyExtractor = function keyExtractor(item) {\n  return item.id.toString();\n};\n\nvar MessageList = function MessageList(_ref) {\n  var messages = _ref.messages,\n      onPressMessage = _ref.onPressMessage;\n\n  var renderMessageBody = function renderMessageBody(_ref2) {\n    var type = _ref2.type,\n        text = _ref2.text,\n        uri = _ref2.uri,\n        coordinate = _ref2.coordinate;\n\n    switch (type) {\n      case 'text':\n        return React.createElement(View, {\n          style: styles.messageBubble,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 6\n          }\n        }, React.createElement(Text, {\n          style: styles.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 7\n          }\n        }, text));\n\n      case 'image':\n        return React.createElement(Image, {\n          style: styles.image,\n          source: {\n            uri: uri\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 12\n          }\n        });\n\n      case 'location':\n        return React.createElement(MapView, {\n          style: styles.map,\n          mapType: 'hybrid',\n          loadingEnabled: true,\n          initialRegion: _objectSpread(_objectSpread({}, coordinate), {}, {\n            latitudeDelta: 0.08,\n            longitudeDelta: 0.04\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 6\n          }\n        }, React.createElement(Marker, {\n          coordinate: coordinate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 7\n          }\n        }));\n\n      default:\n        break;\n    }\n  };\n\n  var renderMessageItem = function renderMessageItem(_ref3) {\n    var item = _ref3.item;\n    return React.createElement(View, {\n      key: item.id,\n      style: styles.messageRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 3\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return onPressMessage(item);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 4\n      }\n    }, renderMessageBody(item)));\n  };\n\n  return React.createElement(FlatList, {\n    style: styles.container,\n    inverted: true,\n    data: messages,\n    renderItem: renderMessageItem,\n    keyExtractor: keyExtractor,\n    keyboardShouldPersistTaps: 'handled',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }\n  });\n};\n\nMessageList.propTypes = {\n  messages: PropTypes.arrayOf(MessageShape).isRequired,\n  onPressMessage: PropTypes.func\n};\nMessageList.defaultProps = {\n  onPressMessage: function onPressMessage() {}\n};\nMessageList.displayName = 'MessageList';\nexport default MessageList;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'visible'\n  },\n  messageRow: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    marginBottom: 8,\n    marginRight: 10,\n    marginLeft: 60\n  },\n  messageBubble: {\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    backgroundColor: 'rebeccapurple',\n    borderRadius: 20\n  },\n  text: {\n    fontSize: 18,\n    color: 'white'\n  },\n  image: {\n    width: 150,\n    height: 150,\n    borderRadius: 10\n  },\n  map: {\n    width: 250,\n    height: 250,\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/joeac/source/repos/messaging/src/components/MessageList.js"],"names":["React","PropTypes","MessageShape","MapView","Marker","keyExtractor","item","id","toString","MessageList","messages","onPressMessage","renderMessageBody","type","text","uri","coordinate","styles","messageBubble","image","map","latitudeDelta","longitudeDelta","renderMessageItem","messageRow","container","propTypes","arrayOf","isRequired","func","defaultProps","displayName","StyleSheet","create","flex","overflow","flexDirection","justifyContent","marginBottom","marginRight","marginLeft","paddingVertical","paddingHorizontal","backgroundColor","borderRadius","fontSize","color","width","height"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n\tFlatList,\r\n\tView,\r\n\tStyleSheet,\r\n\tImage,\r\n\tText,\r\n\tTouchableOpacity,\r\n} from 'react-native';\r\nimport { MessageShape } from '../utils/MessageUtils';\r\nimport MapView, { Marker } from 'react-native-maps';\r\n\r\nconst keyExtractor = (item) => item.id.toString();\r\n\r\nconst MessageList = ({ messages, onPressMessage }) => {\r\n\tconst renderMessageBody = ({ type, text, uri, coordinate }) => {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'text':\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<View style={styles.messageBubble}>\r\n\t\t\t\t\t\t<Text style={styles.text}>{text}</Text>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t);\r\n\t\t\tcase 'image':\r\n\t\t\t\treturn <Image style={styles.image} source={{ uri }} />;\r\n\t\t\tcase 'location':\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MapView\r\n\t\t\t\t\t\tstyle={styles.map}\r\n\t\t\t\t\t\tmapType={'hybrid'}\r\n\t\t\t\t\t\tloadingEnabled={true}\r\n\t\t\t\t\t\tinitialRegion={{\r\n\t\t\t\t\t\t\t...coordinate,\r\n\t\t\t\t\t\t\tlatitudeDelta: 0.08,\r\n\t\t\t\t\t\t\tlongitudeDelta: 0.04,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Marker coordinate={coordinate} />\r\n\t\t\t\t\t</MapView>\r\n\t\t\t\t);\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tconst renderMessageItem = ({ item }) => (\r\n\t\t<View key={item.id} style={styles.messageRow}>\r\n\t\t\t<TouchableOpacity onPress={() => onPressMessage(item)}>\r\n\t\t\t\t{renderMessageBody(item)}\r\n\t\t\t</TouchableOpacity>\r\n\t\t</View>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<FlatList\r\n\t\t\tstyle={styles.container}\r\n\t\t\tinverted\r\n\t\t\tdata={messages}\r\n\t\t\trenderItem={renderMessageItem}\r\n\t\t\tkeyExtractor={keyExtractor}\r\n\t\t\tkeyboardShouldPersistTaps={'handled'}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nMessageList.propTypes = {\r\n\tmessages: PropTypes.arrayOf(MessageShape).isRequired,\r\n\tonPressMessage: PropTypes.func,\r\n};\r\n\r\nMessageList.defaultProps = {\r\n\tonPressMessage: () => { },\r\n};\r\n\r\nMessageList.displayName = 'MessageList';\r\n\r\nexport default MessageList;\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\toverflow: 'visible',\r\n\t},\r\n\tmessageRow: {\r\n\t\tflexDirection: 'row',\r\n\t\tjustifyContent: 'flex-end',\r\n\t\tmarginBottom: 8,\r\n\t\tmarginRight: 10,\r\n\t\tmarginLeft: 60,\r\n\t},\r\n\tmessageBubble: {\r\n\t\tpaddingVertical: 5,\r\n\t\tpaddingHorizontal: 10,\r\n\t\tbackgroundColor: 'rebeccapurple',\r\n\t\tborderRadius: 20,\r\n\t},\r\n\ttext: {\r\n\t\tfontSize: 18,\r\n\t\tcolor: 'white',\r\n\t},\r\n\timage: {\r\n\t\twidth: 150,\r\n\t\theight: 150,\r\n\t\tborderRadius: 10,\r\n\t},\r\n\tmap: {\r\n\t\twidth: 250,\r\n\t\theight: 250,\r\n\t\tborderRadius: 10,\r\n\t},\r\n});"]},"metadata":{},"sourceType":"module"}