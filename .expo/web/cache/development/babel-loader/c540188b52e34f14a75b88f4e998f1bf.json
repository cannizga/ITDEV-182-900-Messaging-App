{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\joeac\\\\source\\\\repos\\\\messaging\\\\src\\\\components\\\\Grid.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\n\nvar Grid = function Grid(_ref) {\n  var data = _ref.data,\n      keyExtractor = _ref.keyExtractor,\n      renderItem = _ref.renderItem,\n      numColumns = _ref.numColumns,\n      itemMargin = _ref.itemMargin,\n      onEndReached = _ref.onEndReached;\n\n  var renderGridItem = function renderGridItem(info) {\n    var index = info.index;\n\n    var _Dimensions$get = Dimensions.get('window'),\n        width = _Dimensions$get.width;\n\n    var size = PixelRatio.roundToNearestPixel((width - itemMargin * (numColumns - 1)) / numColumns);\n    var marginLeft = index % 0 === 0 ? 0 : itemMargin;\n    var marginTop = index < numColumns ? 0 : itemMargin;\n    return renderItem(_objectSpread(_objectSpread({}, info), {}, {\n      size: size,\n      marginLeft: marginLeft,\n      marginTop: marginTop\n    }));\n  };\n\n  return React.createElement(FlatList, {\n    data: data,\n    renderItem: renderGridItem,\n    numColumns: numColumns,\n    keyExtractor: keyExtractor,\n    onEndReached: onEndReached,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }\n  });\n};\n\nGrid.propTypes = {\n  renderItem: PropTypes.func.isRequired,\n  onEndReached: PropTypes.func.isRequired,\n  numColumns: PropTypes.number,\n  itemMargin: PropTypes.number\n};\nGrid.defaultProps = {\n  itemMargin: StyleSheet.hairlineWidth,\n  numColumns: 4\n};\nGrid.displayName = 'Grid';\nexport default Grid;","map":{"version":3,"sources":["C:/Users/joeac/source/repos/messaging/src/components/Grid.js"],"names":["React","PropTypes","Grid","data","keyExtractor","renderItem","numColumns","itemMargin","onEndReached","renderGridItem","info","index","Dimensions","get","width","size","PixelRatio","roundToNearestPixel","marginLeft","marginTop","propTypes","func","isRequired","number","defaultProps","StyleSheet","hairlineWidth","displayName"],"mappings":";;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAOP;AAAA,MANLC,IAMK,QANLA,IAMK;AAAA,MALLC,YAKK,QALLA,YAKK;AAAA,MAJLC,UAIK,QAJLA,UAIK;AAAA,MAHLC,UAGK,QAHLA,UAGK;AAAA,MAFLC,UAEK,QAFLA,UAEK;AAAA,MADLC,YACK,QADLA,YACK;;AACL,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAEhC,QAAQC,KAAR,GAAkBD,IAAlB,CAAQC,KAAR;;AACA,0BAAkBC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAlB;AAAA,QAAQC,KAAR,mBAAQA,KAAR;;AACA,QAAMC,IAAI,GAAGC,UAAU,CAACC,mBAAX,CACZ,CAACH,KAAK,GAAGP,UAAU,IAAID,UAAU,GAAG,CAAjB,CAAnB,IAA0CA,UAD9B,CAAb;AAIA,QAAMY,UAAU,GAAGP,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkB,CAAlB,GAAsBJ,UAAzC;AAEA,QAAMY,SAAS,GAAGR,KAAK,GAAGL,UAAR,GAAqB,CAArB,GAAyBC,UAA3C;AACA,WAAOF,UAAU,iCAAMK,IAAN;AAAYK,MAAAA,IAAI,EAAJA,IAAZ;AAAkBG,MAAAA,UAAU,EAAVA,UAAlB;AAA8BC,MAAAA,SAAS,EAATA;AAA9B,OAAjB;AACA,GAZD;;AAcA,SACC,oBAAC,QAAD;AACC,IAAA,IAAI,EAAEhB,IADP;AAEC,IAAA,UAAU,EAAEM,cAFb;AAGC,IAAA,UAAU,EAAEH,UAHb;AAIC,IAAA,YAAY,EAAEF,YAJf;AAKC,IAAA,YAAY,EAAEI,YALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AASA,CA/BD;;AAiCAN,IAAI,CAACkB,SAAL,GAAiB;AAChBf,EAAAA,UAAU,EAAEJ,SAAS,CAACoB,IAAV,CAAeC,UADX;AAEhBd,EAAAA,YAAY,EAAEP,SAAS,CAACoB,IAAV,CAAeC,UAFb;AAGhBhB,EAAAA,UAAU,EAAEL,SAAS,CAACsB,MAHN;AAIhBhB,EAAAA,UAAU,EAAEN,SAAS,CAACsB;AAJN,CAAjB;AAOArB,IAAI,CAACsB,YAAL,GAAoB;AACnBjB,EAAAA,UAAU,EAAEkB,UAAU,CAACC,aADJ;AAEnBpB,EAAAA,UAAU,EAAE;AAFO,CAApB;AAKAJ,IAAI,CAACyB,WAAL,GAAmB,MAAnB;AAEA,eAAezB,IAAf","sourcesContent":["\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyleSheet, Dimensions, PixelRatio, FlatList } from 'react-native';\r\n\r\nconst Grid = ({\r\n\tdata,\r\n\tkeyExtractor,\r\n\trenderItem,\r\n\tnumColumns,\r\n\titemMargin,\r\n\tonEndReached,\r\n}) => {\r\n\tconst renderGridItem = (info) => {\r\n\t\t//console.log(`Grid::renderGridItem: info is ${JSON.stringify(info)}`);\r\n\t\tconst { index } = info;\r\n\t\tconst { width } = Dimensions.get('window'); // width CAN change :-)\r\n\t\tconst size = PixelRatio.roundToNearestPixel(\r\n\t\t\t(width - itemMargin * (numColumns - 1)) / numColumns,\r\n\t\t);\r\n\t\t// no marginLeft on first item in each row\r\n\t\tconst marginLeft = index % 0 === 0 ? 0 : itemMargin;\r\n\t\t// no marginTop on first item in each column\r\n\t\tconst marginTop = index < numColumns ? 0 : itemMargin;\r\n\t\treturn renderItem({ ...info, size, marginLeft, marginTop });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<FlatList\r\n\t\t\tdata={data}\r\n\t\t\trenderItem={renderGridItem}\r\n\t\t\tnumColumns={numColumns}\r\n\t\t\tkeyExtractor={keyExtractor}\r\n\t\t\tonEndReached={onEndReached}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nGrid.propTypes = {\r\n\trenderItem: PropTypes.func.isRequired,\r\n\tonEndReached: PropTypes.func.isRequired,\r\n\tnumColumns: PropTypes.number,\r\n\titemMargin: PropTypes.number,\r\n};\r\n\r\nGrid.defaultProps = {\r\n\titemMargin: StyleSheet.hairlineWidth,\r\n\tnumColumns: 4,\r\n};\r\n\r\nGrid.displayName = 'Grid';\r\n\r\nexport default Grid;"]},"metadata":{},"sourceType":"module"}