{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\joeac\\\\source\\\\repos\\\\messaging\\\\src\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { createImageMessage, createLocationMessage, createTextMessage } from \"./utils/MessageUtils\";\nimport Status from \"./components/Status\";\nimport MessageList from \"./components/MessageList\";\nimport Toolbar from \"./components/Toolbar\";\nimport ImageGrid from \"./components/ImageGrid\";\nimport KeyboardState from \"./components/KeyboardState\";\nimport MeasureLayout from \"./components/MeasureLayout\";\nimport MessagingContainer, { INPUT_METHOD } from \"./components/MessagingContainer\";\nexport default function App() {\n  var home = {\n    latitude: 38.64584,\n    longitude: -121.53271\n  };\n  var dad = {\n    latitude: 37.33561,\n    longitude: -82.42832\n  };\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      fullscreenImageId = _useState2[0],\n      setFullscreenImageId = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isInputFocused = _useState4[0],\n      setIsInputFocused = _useState4[1];\n\n  var _useState5 = useState(INPUT_METHOD.NONE),\n      _useState6 = _slicedToArray(_useState5, 2),\n      inputMethod = _useState6[0],\n      setInputMethod = _useState6[1];\n\n  var _useState7 = useState([createImageMessage('https://unsplash.it/300/300'), createLocationMessage(dad), createTextMessage('World'), createTextMessage('Hello'), createLocationMessage(home)]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      messages = _useState8[0],\n      setMessages = _useState8[1];\n\n  var dismissFullscreenImage = function dismissFullscreenImage() {\n    setFullscreenImageId(null);\n  };\n\n  var handleChangeInputMethod = function handleChangeInputMethod(newInputMethod) {\n    setInputMethod(newInputMethod);\n  };\n\n  var handlePressToolbarCamera = function handlePressToolbarCamera() {\n    setIsInputFocused(false);\n    setInputMethod(INPUT_METHOD.CUSTOM);\n  };\n\n  var handlePressToolbarLocation = function handlePressToolbarLocation() {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      var _position$coords = position.coords,\n          latitude = _position$coords.latitude,\n          longitude = _position$coords.longitude;\n      setMessages([createLocationMessage({\n        latitude: latitude,\n        longitude: longitude\n      })].concat(_toConsumableArray(messages)));\n    });\n  };\n\n  var handleChangeFocus = function handleChangeFocus(isFocused) {\n    setIsInputFocused(isFocused);\n  };\n\n  var handleSubmit = function handleSubmit(text) {\n    setMessages([createTextMessage(text)].concat(_toConsumableArray(messages)));\n  };\n\n  var handlePressMessage = function handlePressMessage(_ref) {\n    var id = _ref.id,\n        type = _ref.type;\n\n    switch (type) {\n      case 'text':\n        Alert.alert('Delete Message?', 'Are you sure you want to permanently delete this message?', [{\n          text: 'Cancel',\n          style: 'cancel'\n        }, {\n          text: 'Delete',\n          style: 'destructive',\n          onPress: function onPress() {\n            setMessages(function () {\n              return messages.filter(function (msg) {\n                return msg.id !== id;\n              });\n            });\n          }\n        }]);\n        break;\n\n      case 'image':\n        setIsInputFocused(false);\n        setFullscreenImageId(id);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  var renderFullscreenImage = function renderFullscreenImage() {\n    if (!fullscreenImageId) {\n      return null;\n    }\n\n    var image = messages.find(function (msg) {\n      return msg.id === fullscreenImageId;\n    });\n\n    if (!image) {\n      return null;\n    }\n\n    var uri = image.uri;\n    return React.createElement(TouchableHighlight, {\n      style: styles.fullscreenOverlay,\n      onPress: dismissFullscreenImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 4\n      }\n    }, React.createElement(Image, {\n      style: styles.fullscreenImage,\n      source: {\n        uri: uri\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }\n    }));\n  };\n\n  var renderMessageList = function renderMessageList() {\n    return React.createElement(View, {\n      style: styles.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 4\n      }\n    }, React.createElement(MessageList, {\n      messages: messages,\n      onPressMessage: handlePressMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 5\n      }\n    }));\n  };\n\n  var handlePressImage = function handlePressImage(uri) {\n    setMessages([createImageMessage(uri)].concat(_toConsumableArray(messages)));\n  };\n\n  var renderInputMethodEditor = function renderInputMethodEditor() {\n    return React.createElement(View, {\n      style: styles.inputMethodEditor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 3\n      }\n    }, React.createElement(ImageGrid, {\n      onPressImage: handlePressImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 4\n      }\n    }));\n  };\n\n  var renderToolbar = function renderToolbar() {\n    return React.createElement(View, {\n      style: styles.toolbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 3\n      }\n    }, React.createElement(Toolbar, {\n      isFocused: isInputFocused,\n      onSubmit: handleSubmit,\n      onChangeFocus: handleChangeFocus,\n      onPressCamera: handlePressToolbarCamera,\n      onPressLocation: handlePressToolbarLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 4\n      }\n    }));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 3\n    }\n  }, React.createElement(Status, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 4\n    }\n  }), React.createElement(MeasureLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 4\n    }\n  }, function (layout) {\n    return React.createElement(KeyboardState, {\n      layout: layout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 6\n      }\n    }, function (keyboardInfo) {\n      return React.createElement(MessagingContainer, _extends({}, keyboardInfo, {\n        inputMethod: inputMethod,\n        onChangeInputMethod: handleChangeInputMethod,\n        renderInputMethodEditor: renderInputMethodEditor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 8\n        }\n      }), renderMessageList(), renderToolbar());\n    });\n  }), renderFullscreenImage());\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  content: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  inputMethodEditor: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  toolbar: {\n    borderTopWidth: 5,\n    borderTopColor: 'rgba(0,0,0,0.04)',\n    backgroundColor: 'rebeccapurple'\n  },\n  fullscreenOverlay: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: 'black',\n    zIndex: 2\n  }),\n  fullscreenImage: {\n    flex: 1,\n    resizeMode: 'contain'\n  }\n});","map":{"version":3,"sources":["C:/Users/joeac/source/repos/messaging/src/App.js"],"names":["React","useState","createImageMessage","createLocationMessage","createTextMessage","Status","MessageList","Toolbar","ImageGrid","KeyboardState","MeasureLayout","MessagingContainer","INPUT_METHOD","App","home","latitude","longitude","dad","fullscreenImageId","setFullscreenImageId","isInputFocused","setIsInputFocused","NONE","inputMethod","setInputMethod","messages","setMessages","dismissFullscreenImage","handleChangeInputMethod","newInputMethod","handlePressToolbarCamera","CUSTOM","handlePressToolbarLocation","navigator","geolocation","getCurrentPosition","position","coords","handleChangeFocus","isFocused","handleSubmit","text","handlePressMessage","id","type","Alert","alert","style","onPress","filter","msg","renderFullscreenImage","image","find","uri","styles","fullscreenOverlay","fullscreenImage","renderMessageList","content","handlePressImage","renderInputMethodEditor","inputMethodEditor","renderToolbar","toolbar","container","layout","keyboardInfo","StyleSheet","create","flex","backgroundColor","borderTopWidth","borderTopColor","absoluteFillObject","zIndex","resizeMode"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n\tStyleSheet,\n\tView,\n\tAlert,\n\tImage,\n\tTouchableHighlight,\n} from 'react-native';\nimport {\n\tcreateImageMessage,\n\tcreateLocationMessage,\n\tcreateTextMessage,\n} from './utils/MessageUtils';\nimport Status from './components/Status';\nimport MessageList from './components/MessageList';\nimport Toolbar from './components/Toolbar';\nimport ImageGrid from './components/ImageGrid';\nimport KeyboardState from './components/KeyboardState';\nimport MeasureLayout from './components/MeasureLayout';\nimport MessagingContainer, {\n\tINPUT_METHOD,\n} from './components/MessagingContainer';\n\nexport default function App() {\n\tconst home = {\n\t\tlatitude: 38.64584,\n\t\tlongitude: -121.53271,\n\t};\n\tconst dad = {\n\t\tlatitude: 37.33561,\n\t\tlongitude: -82.42832,\n\t};\n\n\tconst [fullscreenImageId, setFullscreenImageId] = useState(null);\n\tconst [isInputFocused, setIsInputFocused] = useState(false);\n\tconst [inputMethod, setInputMethod] = useState(INPUT_METHOD.NONE);\n\tconst [messages, setMessages] = useState([\n\t\tcreateImageMessage('https://unsplash.it/300/300'),\n\t\tcreateLocationMessage(dad),\n\t\tcreateTextMessage('World'),\n\t\tcreateTextMessage('Hello'),\n\t\tcreateLocationMessage(home),\n\t]);\n\n\tconst dismissFullscreenImage = () => {\n\t\tsetFullscreenImageId(null);\n\t};\n\n\tconst handleChangeInputMethod = (newInputMethod) => {\n\t\tsetInputMethod(newInputMethod);\n\t};\n\n\tconst handlePressToolbarCamera = () => {\n\t\tsetIsInputFocused(false);\n\t\tsetInputMethod(INPUT_METHOD.CUSTOM);\n\t};\n\n\tconst handlePressToolbarLocation = () => {\n\t\t// if using react-native-cli, Info.plist must also be\n\t\t// modified to enable location permissions!\n\t\tnavigator.geolocation.getCurrentPosition((position) => {\n\t\t\tconst {\n\t\t\t\tcoords: { latitude, longitude },\n\t\t\t} = position;\n\n\t\t\tsetMessages([\n\t\t\t\tcreateLocationMessage({ latitude, longitude }),\n\t\t\t\t...messages,\n\t\t\t]);\n\t\t});\n\t};\n\n\tconst handleChangeFocus = (isFocused) => {\n\t\tsetIsInputFocused(isFocused);\n\t};\n\n\tconst handleSubmit = (text) => {\n\t\tsetMessages([createTextMessage(text), ...messages]);\n\t};\n\n\tconst handlePressMessage = ({ id, type }) => {\n\t\tswitch (type) {\n\t\t\tcase 'text':\n\t\t\t\tAlert.alert(\n\t\t\t\t\t'Delete Message?',\n\t\t\t\t\t'Are you sure you want to permanently delete this message?',\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext: 'Cancel',\n\t\t\t\t\t\t\tstyle: 'cancel',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext: 'Delete',\n\t\t\t\t\t\t\tstyle: 'destructive',\n\t\t\t\t\t\t\tonPress: () => {\n\t\t\t\t\t\t\t\tsetMessages(() =>\n\t\t\t\t\t\t\t\t\tmessages.filter((msg) => msg.id !== id),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'image':\n\t\t\t\tsetIsInputFocused(false); // just the keyboard is showing\n\t\t\t\tsetFullscreenImageId(id);\n\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t/*\n\tNOTE: gonna skip the book section on implementing the BackHandler for Android\n\t*/\n\tconst renderFullscreenImage = () => {\n\t\tif (!fullscreenImageId) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst image = messages.find((msg) => msg.id === fullscreenImageId);\n\t\tif (!image) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst { uri } = image;\n\n\t\treturn (\n\t\t\t<TouchableHighlight\n\t\t\t\tstyle={styles.fullscreenOverlay}\n\t\t\t\tonPress={dismissFullscreenImage}\n\t\t\t>\n\t\t\t\t<Image style={styles.fullscreenImage} source={{ uri }} />\n\t\t\t</TouchableHighlight>\n\t\t);\n\t};\n\n\tconst renderMessageList = () => {\n\t\treturn (\n\t\t\t<View style={styles.content}>\n\t\t\t\t<MessageList\n\t\t\t\t\tmessages={messages}\n\t\t\t\t\tonPressMessage={handlePressMessage}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t);\n\t};\n\n\tconst handlePressImage = (uri) => {\n\t\tsetMessages([createImageMessage(uri), ...messages]);\n\t};\n\n\tconst renderInputMethodEditor = () => (\n\t\t<View style={styles.inputMethodEditor}>\n\t\t\t<ImageGrid onPressImage={handlePressImage} />\n\t\t</View>\n\t);\n\n\tconst renderToolbar = () => (\n\t\t<View style={styles.toolbar}>\n\t\t\t<Toolbar\n\t\t\t\tisFocused={isInputFocused}\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\tonChangeFocus={handleChangeFocus}\n\t\t\t\tonPressCamera={handlePressToolbarCamera}\n\t\t\t\tonPressLocation={handlePressToolbarLocation}\n\t\t\t/>\n\t\t</View>\n\t);\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<Status />\n\t\t\t<MeasureLayout>\n\t\t\t\t{(layout) => (\n\t\t\t\t\t<KeyboardState layout={layout}>\n\t\t\t\t\t\t{(keyboardInfo) => (\n\t\t\t\t\t\t\t<MessagingContainer\n\t\t\t\t\t\t\t\t{...keyboardInfo}\n\t\t\t\t\t\t\t\tinputMethod={inputMethod}\n\t\t\t\t\t\t\t\tonChangeInputMethod={handleChangeInputMethod}\n\t\t\t\t\t\t\t\trenderInputMethodEditor={\n\t\t\t\t\t\t\t\t\trenderInputMethodEditor\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{renderMessageList()}\n\t\t\t\t\t\t\t\t{renderToolbar()}\n\t\t\t\t\t\t\t</MessagingContainer>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</KeyboardState>\n\t\t\t\t)}\n\t\t\t</MeasureLayout>\n\t\t\t{renderFullscreenImage()}\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: 'white',\n\t},\n\tcontent: {\n\t\tflex: 1,\n\t\tbackgroundColor: 'white',\n\t},\n\tinputMethodEditor: {\n\t\tflex: 1,\n\t\tbackgroundColor: 'white',\n\t},\n\ttoolbar: {\n\t\tborderTopWidth: 5,\n\t\tborderTopColor: 'rgba(0,0,0,0.04)',\n\t\tbackgroundColor: 'rebeccapurple',\n\t},\n\tfullscreenOverlay: {\n\t\t...StyleSheet.absoluteFillObject,\n\t\tbackgroundColor: 'black',\n\t\tzIndex: 2,\n\t},\n\tfullscreenImage: {\n\t\tflex: 1,\n\t\tresizeMode: 'contain',\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}