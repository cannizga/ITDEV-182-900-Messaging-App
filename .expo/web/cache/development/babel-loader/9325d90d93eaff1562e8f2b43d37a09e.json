{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar INITIAL_ANIMATION_DURATION = 250;\n\nvar KeyboardState = function KeyboardState(_ref) {\n  var layout = _ref.layout,\n      children = _ref.children;\n\n  var _useState = useState(layout.height),\n      _useState2 = _slicedToArray(_useState, 2),\n      contentHeight = _useState2[0],\n      setContentHeight = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      keyboardHeight = _useState4[0],\n      setKeyboardHeight = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      keyboardVisible = _useState6[0],\n      setKeyboardVisible = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      keyboardWillShow = _useState8[0],\n      setKeyboardWillShow = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      keyboardWillHide = _useState10[0],\n      setKeyboardWillHide = _useState10[1];\n\n  var _useState11 = useState(INITIAL_ANIMATION_DURATION),\n      _useState12 = _slicedToArray(_useState11, 2),\n      keyboardAnimationDuration = _useState12[0],\n      setKeyboardAnimationDuration = _useState12[1];\n\n  var subscriptions = [];\n\n  var measure = function measure(event) {\n    var _event$endCoordinates = event.endCoordinates,\n        height = _event$endCoordinates.height,\n        screenY = _event$endCoordinates.screenY,\n        duration = event.duration;\n    setContentHeight(screenY - layout.y);\n    setKeyboardHeight(height);\n    setKeyboardAnimationDuration(duration || INITIAL_ANIMATION_DURATION);\n  };\n\n  var handleKeyboardWillShow = function handleKeyboardWillShow(event) {\n    setKeyboardWillShow(true);\n    measure(event);\n  };\n\n  var handleKeyboardWillHide = function handleKeyboardWillHide(event) {\n    setKeyboardWillHide(true);\n    measure(event);\n  };\n\n  var handleKeyboardDidShow = function handleKeyboardDidShow(event) {\n    setKeyboardWillShow(false);\n    setKeyboardVisible(true);\n    measure(event);\n  };\n\n  var handleKeyboardDidHide = function handleKeyboardDidHide() {\n    setKeyboardWillHide(false);\n    setKeyboardVisible(false);\n  };\n\n  useEffect(function () {\n    if (Platform.OS === 'ios') {\n      subscriptions = [Keyboard.addListener('keyboardWillShow', handleKeyboardWillShow), Keyboard.addListener('keyboardWillHide', handleKeyboardWillHide), Keyboard.addListener('keyboardDidShow', handleKeyboardDidShow), Keyboard.addListener('keyboardDidHide', handleKeyboardDidHide)];\n    } else {\n      subscriptions = [Keyboard.addListener('keyboardDidShow', handleKeyboardDidShow), Keyboard.addListener('keyboardDidHide', handleKeyboardDidHide)];\n    }\n\n    return function () {\n      subscriptions.forEach(function (subscription) {\n        return subscription.remove();\n      });\n    };\n  }, []);\n  return children({\n    containerHeight: layout.height,\n    contentHeight: contentHeight,\n    keyboardHeight: keyboardHeight,\n    keyboardVisible: keyboardVisible,\n    keyboardWillShow: keyboardWillShow,\n    keyboardWillHide: keyboardWillHide,\n    keyboardAnimationDuration: keyboardAnimationDuration\n  });\n};\n\nKeyboardState.propTypes = {\n  layout: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired\n  }).isRequired,\n  children: PropTypes.func.isRequired\n};\nKeyboardState.displayName = 'KeyboardState';\nexport default KeyboardState;","map":{"version":3,"sources":["C:/Users/joeac/source/repos/messaging/src/components/KeyboardState.js"],"names":["useState","useEffect","PropTypes","INITIAL_ANIMATION_DURATION","KeyboardState","layout","children","height","contentHeight","setContentHeight","keyboardHeight","setKeyboardHeight","keyboardVisible","setKeyboardVisible","keyboardWillShow","setKeyboardWillShow","keyboardWillHide","setKeyboardWillHide","keyboardAnimationDuration","setKeyboardAnimationDuration","subscriptions","measure","event","endCoordinates","screenY","duration","y","handleKeyboardWillShow","handleKeyboardWillHide","handleKeyboardDidShow","handleKeyboardDidHide","Platform","OS","Keyboard","addListener","forEach","subscription","remove","containerHeight","propTypes","shape","x","number","isRequired","width","func","displayName"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Keyboard, Platform } from 'react-native';\r\n\r\nconst INITIAL_ANIMATION_DURATION = 250;\r\n\r\nconst KeyboardState = ({ layout, children }) => {\r\n\tconst [contentHeight, setContentHeight] = useState(layout.height);\r\n\tconst [keyboardHeight, setKeyboardHeight] = useState(0);\r\n\tconst [keyboardVisible, setKeyboardVisible] = useState(false);\r\n\tconst [keyboardWillShow, setKeyboardWillShow] = useState(false);\r\n\tconst [keyboardWillHide, setKeyboardWillHide] = useState(false);\r\n\tconst [keyboardAnimationDuration, setKeyboardAnimationDuration] = useState(\r\n\t\tINITIAL_ANIMATION_DURATION,\r\n\t);\r\n\tlet subscriptions = [];\r\n\r\n\tconst measure = (event) => {\r\n\t\tconst {\r\n\t\t\tendCoordinates: { height, screenY },\r\n\t\t\tduration,\r\n\t\t} = event;\r\n\r\n\t\tsetContentHeight(screenY - layout.y);\r\n\t\tsetKeyboardHeight(height);\r\n\t\tsetKeyboardAnimationDuration(duration || INITIAL_ANIMATION_DURATION);\r\n\t};\r\n\r\n\tconst handleKeyboardWillShow = (event) => {\r\n\t\tsetKeyboardWillShow(true);\r\n\t\tmeasure(event);\r\n\t};\r\n\tconst handleKeyboardWillHide = (event) => {\r\n\t\tsetKeyboardWillHide(true);\r\n\t\tmeasure(event);\r\n\t};\r\n\tconst handleKeyboardDidShow = (event) => {\r\n\t\tsetKeyboardWillShow(false);\r\n\t\tsetKeyboardVisible(true);\r\n\t\tmeasure(event);\r\n\t};\r\n\tconst handleKeyboardDidHide = () => {\r\n\t\tsetKeyboardWillHide(false);\r\n\t\tsetKeyboardVisible(false);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (Platform.OS === 'ios') {\r\n\t\t\tsubscriptions = [\r\n\t\t\t\tKeyboard.addListener(\r\n\t\t\t\t\t'keyboardWillShow',\r\n\t\t\t\t\thandleKeyboardWillShow,\r\n\t\t\t\t),\r\n\t\t\t\tKeyboard.addListener(\r\n\t\t\t\t\t'keyboardWillHide',\r\n\t\t\t\t\thandleKeyboardWillHide,\r\n\t\t\t\t),\r\n\t\t\t\tKeyboard.addListener('keyboardDidShow', handleKeyboardDidShow),\r\n\t\t\t\tKeyboard.addListener('keyboardDidHide', handleKeyboardDidHide),\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\tsubscriptions = [\r\n\t\t\t\tKeyboard.addListener('keyboardDidShow', handleKeyboardDidShow),\r\n\t\t\t\tKeyboard.addListener('keyboardDidHide', handleKeyboardDidHide),\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\tsubscriptions.forEach((subscription) => subscription.remove());\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn children({\r\n\t\tcontainerHeight: layout.height,\r\n\t\tcontentHeight,\r\n\t\tkeyboardHeight,\r\n\t\tkeyboardVisible,\r\n\t\tkeyboardWillShow,\r\n\t\tkeyboardWillHide,\r\n\t\tkeyboardAnimationDuration,\r\n\t});\r\n};\r\n\r\nKeyboardState.propTypes = {\r\n\tlayout: PropTypes.shape({\r\n\t\tx: PropTypes.number.isRequired,\r\n\t\ty: PropTypes.number.isRequired,\r\n\t\twidth: PropTypes.number.isRequired,\r\n\t\theight: PropTypes.number.isRequired,\r\n\t}).isRequired,\r\n\tchildren: PropTypes.func.isRequired,\r\n};\r\n\r\nKeyboardState.displayName = 'KeyboardState';\r\n\r\nexport default KeyboardState;"]},"metadata":{},"sourceType":"module"}