{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\joeac\\\\source\\\\repos\\\\messaging\\\\src\\\\components\\\\ImageGrid.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Grid from \"./Grid\";\nimport CameraRoll from 'expo-cameraroll';\nimport { MediaType } from 'expo-media-library';\nimport * as Permissions from 'expo-permissions';\n\nvar keyExtractor = function keyExtractor(_ref) {\n  var uri = _ref.uri;\n  return uri;\n};\n\nvar ImageGrid = function ImageGrid(_ref2) {\n  var onPressImage = _ref2.onPressImage;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cursor = _useState4[0],\n      setCursor = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      images = _useState6[0],\n      setImages = _useState6[1];\n\n  var getImages = function getImages(after) {\n    var _await$Permissions$as, status, results, edges, _results$page_info, has_next_page, end_cursor, loadedImages;\n\n    return _regeneratorRuntime.async(function getImages$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!loading) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n          case 4:\n            _await$Permissions$as = _context.sent;\n            status = _await$Permissions$as.status;\n\n            if (!(status !== 'granted')) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 8:\n            setLoading(true);\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(CameraRoll.getPhotos({\n              first: 20,\n              after: after,\n              mediaType: [MediaType.photo]\n            }));\n\n          case 11:\n            results = _context.sent;\n            edges = results.edges, _results$page_info = results.page_info, has_next_page = _results$page_info.has_next_page, end_cursor = _results$page_info.end_cursor;\n            loadedImages = edges.map(function (img) {\n              return img.node.image;\n            });\n            setImages([].concat(_toConsumableArray(images), _toConsumableArray(loadedImages)));\n            setLoading(false);\n            setCursor(has_next_page ? end_cursor : null);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getImages();\n  }, []);\n\n  var getNextImages = function getNextImages() {\n    if (!cursor) {\n      return;\n    }\n\n    getImages(cursor);\n  };\n\n  var renderItem = function renderItem(_ref3) {\n    var uri = _ref3.item.uri,\n        size = _ref3.size,\n        marginTop = _ref3.marginTop,\n        marginLeft = _ref3.marginLeft;\n    var style = {\n      width: size,\n      height: size,\n      marginLeft: marginLeft,\n      marginTop: marginTop\n    };\n    return React.createElement(TouchableOpacity, {\n      key: uri,\n      activeOpacity: 0.75,\n      style: style,\n      onPress: function onPress() {\n        return onPressImage(uri);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 4\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: uri\n      },\n      style: styles.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }\n    }));\n  };\n\n  return React.createElement(Grid, {\n    data: images,\n    renderItem: renderItem,\n    keyExtractor: keyExtractor,\n    onEndReached: getNextImages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }\n  });\n};\n\nImageGrid.propTypes = {\n  onPressImage: PropTypes.func\n};\nImageGrid.defaultProps = {\n  onPressImage: function onPressImage() {}\n};\nImageGrid.displayName = 'ImageGrid';\nexport default ImageGrid;\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/joeac/source/repos/messaging/src/components/ImageGrid.js"],"names":["React","useState","useEffect","PropTypes","Grid","CameraRoll","MediaType","Permissions","keyExtractor","uri","ImageGrid","onPressImage","loading","setLoading","cursor","setCursor","images","setImages","getImages","after","askAsync","CAMERA_ROLL","status","getPhotos","first","mediaType","photo","results","edges","page_info","has_next_page","end_cursor","loadedImages","map","img","node","image","getNextImages","renderItem","item","size","marginTop","marginLeft","style","width","height","styles","propTypes","func","defaultProps","displayName","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyleSheet, Image, TouchableOpacity } from 'react-native';\r\nimport Grid from './Grid';\r\nimport CameraRoll from 'expo-cameraroll';\r\nimport { MediaType } from 'expo-media-library';\r\n\r\nimport * as Permissions from 'expo-permissions';\r\n\r\nconst keyExtractor = ({ uri }) => uri;\r\n\r\nconst ImageGrid = ({ onPressImage }) => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [cursor, setCursor] = useState(null);\r\n\tconst [images, setImages] = useState([]);\r\n\r\n\tconst getImages = async (after) => {\r\n\t\tif (loading) return;\r\n\r\n\t\tconst { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\r\n\t\tif (status !== 'granted') return;\r\n\r\n\t\tsetLoading(true);\r\n\r\n\t\tconst results = await CameraRoll.getPhotos({\r\n\t\t\tfirst: 20,\r\n\t\t\tafter,\r\n\t\t\tmediaType: [MediaType.photo],\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tedges,\r\n\t\t\tpage_info: { has_next_page, end_cursor },\r\n\t\t} = results;\r\n\t\tconst loadedImages = edges.map((img) => img.node.image);\r\n\t\tsetImages([...images, ...loadedImages]);\r\n\t\tsetLoading(false);\r\n\t\tsetCursor(has_next_page ? end_cursor : null);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetImages(); // initial images\r\n\t}, []);\r\n\r\n\tconst getNextImages = () => {\r\n\t\tif (!cursor) {\r\n\t\t\treturn; // there are no more\r\n\t\t}\r\n\r\n\t\tgetImages(cursor); // load from where CameralRoll left off last time\r\n\t};\r\n\r\n\tconst renderItem = ({ item: { uri }, size, marginTop, marginLeft }) => {\r\n\t\tconst style = {\r\n\t\t\twidth: size,\r\n\t\t\theight: size,\r\n\t\t\tmarginLeft,\r\n\t\t\tmarginTop,\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<TouchableOpacity\r\n\t\t\t\tkey={uri}\r\n\t\t\t\tactiveOpacity={0.75}\r\n\t\t\t\tstyle={style}\r\n\t\t\t\tonPress={() => onPressImage(uri)}\r\n\t\t\t>\r\n\t\t\t\t<Image source={{ uri }} style={styles.image} />\r\n\t\t\t</TouchableOpacity>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid\r\n\t\t\tdata={images}\r\n\t\t\trenderItem={renderItem}\r\n\t\t\tkeyExtractor={keyExtractor}\r\n\t\t\tonEndReached={getNextImages}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nImageGrid.propTypes = {\r\n\tonPressImage: PropTypes.func,\r\n};\r\n\r\nImageGrid.defaultProps = {\r\n\tonPressImage: () => { },\r\n};\r\n\r\nImageGrid.displayName = 'ImageGrid';\r\n\r\nexport default ImageGrid;\r\n\r\nconst styles = StyleSheet.create({\r\n\timage: {\r\n\t\tflex: 1,\r\n\t},\r\n});"]},"metadata":{},"sourceType":"module"}