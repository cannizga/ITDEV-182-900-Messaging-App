{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\joeac\\\\source\\\\repos\\\\messaging\\\\src\\\\components\\\\MeasureLayout.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Constants from 'expo-constants';\n\nvar MeasureLayout = function MeasureLayout(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      layout = _useState2[0],\n      setLayout = _useState2[1];\n\n  var handleLayout = function handleLayout(event) {\n    var layout = event.nativeEvent.layout;\n    setLayout(_objectSpread(_objectSpread({}, layout), {}, {\n      y: layout.y + (Platform.OS === 'android' ? Constants.statusBarHeight : 0)\n    }));\n  };\n\n  if (!layout) {\n    return React.createElement(View, {\n      onLayout: handleLayout,\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 10\n      }\n    });\n  }\n\n  return children(layout);\n};\n\nMeasureLayout.propTypes = {\n  children: PropTypes.func.isRequired\n};\nMeasureLayout.displayName = 'MeasureLayout';\nexport default MeasureLayout;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/joeac/source/repos/messaging/src/components/MeasureLayout.js"],"names":["React","useState","PropTypes","Constants","MeasureLayout","children","layout","setLayout","handleLayout","event","nativeEvent","y","Platform","OS","statusBarHeight","styles","container","propTypes","func","isRequired","displayName","StyleSheet","create","flex"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACvC,kBAA4BJ,QAAQ,CAAC,IAAD,CAApC;AAAA;AAAA,MAAOK,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC/B,QACgBH,MADhB,GAEIG,KAFJ,CACCC,WADD,CACgBJ,MADhB;AAIAC,IAAAA,SAAS,iCACLD,MADK;AAERK,MAAAA,CAAC,EACAL,MAAM,CAACK,CAAP,IACCC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4BV,SAAS,CAACW,eAAtC,GAAwD,CADzD;AAHO,OAAT;AAMA,GAXD;;AAaA,MAAI,CAACR,MAAL,EAAa;AACZ,WAAO,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAEE,YAAhB;AAA8B,MAAA,KAAK,EAAEO,MAAM,CAACC,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AAED,SAAOX,QAAQ,CAACC,MAAD,CAAf;AACA,CArBD;;AAuBAF,aAAa,CAACa,SAAd,GAA0B;AACzBZ,EAAAA,QAAQ,EAAEH,SAAS,CAACgB,IAAV,CAAeC;AADA,CAA1B;AAIAf,aAAa,CAACgB,WAAd,GAA4B,eAA5B;AAEA,eAAehB,aAAf;AAEA,IAAMW,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAChCN,EAAAA,SAAS,EAAE;AACVO,IAAAA,IAAI,EAAE;AADI;AADqB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyleSheet, View, Platform } from 'react-native';\r\nimport Constants from 'expo-constants';\r\n\r\nconst MeasureLayout = ({ children }) => {\r\n\tconst [layout, setLayout] = useState(null);\r\n\r\n\tconst handleLayout = (event) => {\r\n\t\tconst {\r\n\t\t\tnativeEvent: { layout },\r\n\t\t} = event;\r\n\r\n\t\tsetLayout({\r\n\t\t\t...layout,\r\n\t\t\ty:\r\n\t\t\t\tlayout.y +\r\n\t\t\t\t(Platform.OS === 'android' ? Constants.statusBarHeight : 0),\r\n\t\t});\r\n\t};\r\n\r\n\tif (!layout) {\r\n\t\treturn <View onLayout={handleLayout} style={styles.container} />;\r\n\t}\r\n\r\n\treturn children(layout);\r\n};\r\n\r\nMeasureLayout.propTypes = {\r\n\tchildren: PropTypes.func.isRequired,\r\n};\r\n\r\nMeasureLayout.displayName = 'MeasureLayout';\r\n\r\nexport default MeasureLayout;\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t},\r\n});"]},"metadata":{},"sourceType":"module"}